const axios = require('axios');
module.exports.config = {
  name: 'autoweather',
  version: '10.02',
  hasPermssion: 0,
  credits: 'DC-Nam', // Bok idea th·ªùi ti·∫øt
  description: 'T·ª± ƒë·ªông g·ª≠i tin nh·∫Øn theo gi·ªù ƒë√£ c√†i!',
  commandCategory: 'Nh√≥m messenger',
  usages: '[]',
  cooldowns: 3
};
const nam = [
  {
    timer: '12:00:00',
    message: ['\n{abc}']
  },
  {
    timer: '18:00:00',
    message: ['\n{abc}']
  },
  {
    timer: '6:00:00',
    message: ['\n{abc}']
  }];
module.exports.onLoad = o => setInterval(async () => {
  var date = (new Date).toLocaleTimeString("vi-VN", {
    timeZone: "Asia/Ho_Chi_Minh"
  });

  const r = a => a[Math.floor(Math.random() * a.length)];
  if (√° = nam.find(i => i.timer == date)) {
    var msg = r(√°.message);
    const res = await axios.get(`https://api.popcat.xyz/weather?q=H%C3%A0%20N%E1%BB%99i`);
    var currentDay = res.data[0].current.day.replace(/Friday/g, "ùóßùóµùòÇÃõÃÅ ùü≤").replace(/Saturday/g, "ùóßùóµùòÇÃõÃÅ ùü≥").replace(/Sunday/g, "ùóñùóµùòÇÃâ ùóªùóµùóÆÃ£ÃÇùòÅ").replace(/Monday/g, "ùóßùóµùòÇÃõÃÅ ùüÆ").replace(/Tuesday/g, "ùóßùóµùòÇÃõÃÅ ùüØ").replace(/Wednesday/g, "ùóßùóµùòÇÃõÃÅ ùü∞").replace(/Thursday/g, "ùóßùóµùòÇÃõÃÅ ùü±");
    var date = res.data[0].current.date;
    var dateFormat = `üóìÔ∏è ùó°ùó¥ùóÆÃÄùòÜ ${date.split("-")[2]}-${date.split("-")[1]}-${date.split("-")[0]}`;

    var skytext = res.data[0].current.skytext.toString()
    "Cloudy" == skytext ? skytext = "ùó†ùóÆÃÇùòÜ" : "Sunny" == skytext ? skytext = "ùó°ùóÆÃÜÃÅùóªùó¥" : "Partly Cloudy" == skytext ? skytext = "ùó†ùóÆÃÇùòÜ ùó∫ùóºÃ£ÃÇùòÅ ùóΩùóµùóÆÃÇÃÄùóª" : "Mostly Cloudy" == skytext ? skytext = "ùó†ùóÆÃÇùòÜ ùóøùóÆÃÇÃÅùòÅ ùóªùóµùó∂ùó≤ÃÇÃÄùòÇ" : "Rain" == skytext ? skytext = "ùó†ùòÇÃõùóÆ" : "Thunderstorm" == skytext ? skytext = "ùóïùóÆÃÉùóº" : "Snow" == skytext ? skytext = "ùóßùòÇùòÜùó≤ÃÇÃÅùòÅ" : "Fog" == skytext || "Haze" == skytext ? skytext = "ùó¶ùòÇÃõùóºÃõùóªùó¥ ùó∫ùòÇÃÄ" : "Clear" == skytext ? skytext = "ùóßùóøùóºÃõÃÄùó∂ ùòÅùóøùóºùóªùó¥" : "Light Rain" == skytext ? skytext = "ùó†ùòÇÃõùóÆ ùóªùóµùó≤Ã£" : "Mostly Clear" == skytext && (skytext = "ùóßùóøùóºÃõÃÄùó∂ ùòÅùóøùóºùóªùó¥ ùóøùóÆÃÇÃÅùòÅ ùóªùóµùó∂ùó≤ÃÇÃÄùòÇ");

    var winddisplay = res.data[0].current.winddisplay.toString().split(" ")[2];
    "Northeast" == winddisplay && (winddisplay = "ùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùóóùóºÃÇùóªùó¥ ùóïùóÆÃÜÃÅùó∞"), "Northwest" == winddisplay && (winddisplay = "ùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùóßùóÆÃÇùòÜ ùóïùóÆÃÜÃÅùó∞"), "Southeast" == winddisplay && (winddisplay = "ùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùóóùóºÃÇùóªùó¥ ùó°ùóÆùó∫"), "Southwest" == winddisplay && (winddisplay = "ùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùóßùóÆÃÇùòÜ ùó°ùóÆùó∫"), "East" == winddisplay && (winddisplay = "ùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùóóùóºÃÇùóªùó¥"), "West" == winddisplay && (winddisplay = "ùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùóßùóÆÃÇùòÜ"), "North" == winddisplay && (winddisplay = "ùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùóïùóÆÃÜÃÅùó∞"), "South" == winddisplay && (winddisplay = "ùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùó°ùóÆùó∫");

    console.log(`\n[ ${date} ] ƒê√£ g·ª≠i tin nh·∫Øn t·ª± ƒë·ªông!`); //fix by RqzaX

    var abc = `=====[ ùóßùóõùó¢ÃÇùó°ùóö ùóïùóîÃÅùó¢ ùóßùóõùó¢ÃõÃÄùóú ùóßùóúùóòÃÇÃÅùóß ]=====\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚Üí üåè ùóóùòÇÃõùóºÃõÃÅùó∂ ùó±ùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùóµùóºÃÇùóªùó¥ ùóØùóÆÃÅùóº ùòÅùóµùóºÃõÃÄùó∂ ùòÅùó∂ùó≤ÃÇÃÅùòÅ ùóµùóºÃÇùó∫ ùóªùóÆùòÜ ùòÅùóÆÃ£ùó∂:\n\nüåÉ ${res.data[0].location.name}.\n\n‚Üí ùóßùóµùóºÃõÃÄùó∂ ùó¥ùó∂ùóÆùóª: ${currentDay}/${dateFormat}.\n‚Üí ùó°ùóµùó∂ùó≤Ã£ÃÇùòÅ ùó±ùóºÃ£ÃÇ: ${res.data[0].current.temperature}¬∞${res.data[0].location.degreetype}.\n‚Üí ùó†ùóºÃÇ ùòÅùóÆÃâ: ${skytext}.\n‚Üí ùóóùóºÃ£ÃÇ ùóÆÃÇÃâùó∫: ${res.data[0].current.humidity}%.\n‚Üí ùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùó¥ùó∂ùóºÃÅ: ${res.data[0].current.windspeed} ${winddisplay}.\n‚Üí ùóöùóµùó∂ ùóªùóµùóÆÃ£ÃÇùóª ùòÉùóÆÃÄùóº ùóπùòÇÃÅùó∞: ${res.data[0].current.observationtime}.\n‚Üí ùóßùòÇÃõÃÄ ùòÅùóøùóÆÃ£ùó∫ ùòÉùòÇÃÉ ùòÅùóøùòÇÃ£ ùó∞ùòÇÃâùóÆ ùóßùóµùó∂ùó≤ÃÇùóª ùó©ùóÆÃÇùóª`;
    global.data.allThreadID.forEach(i => o.api.sendMessage(r(√°.message).replace(/{abc}/g, abc), i));
  };
}, 1000);

module.exports.run = async o => {
  try {
    const axios = global.nodemodule["axios"];
    const fs = global.nodemodule["fs-extra"];
    const request = global.nodemodule["request"];
    const { api, event, args } = o;
    const { threadID, messageID } = event;
    var bok = args.join(" ");
    if (!bok) return api.sendMessage("nh·∫≠p t·ªânh/tp c·∫ßn xem th·ªùi ti·∫øt", threadID);
    const res = await axios.get(`https://api.popcat.xyz/weather?q=${encodeURI(bok)}`);
    const bokk = res.data[0].forecast;
    var text = `Th·ªùi ti·∫øt c·ªßa: ${bok} v√†o c√°c ng√†y`;
    for (let i = 0; i < 5; i++) {
      text += `\n${i + 1}-> ${bokk[i].day} ${bokk[i].date}\n=>Nhi·ªát ƒë·ªô d·ª± b√°o: t·ª´ ${bokk[i].low} ƒë·∫øn ${bokk[i].high}\n=>M√¥ t·∫£: ${bokk[i].skytextday}\n=>T·ª∑ l·ªá m∆∞a: ${bokk[i].precip}\n`
    };
    api.sendMessage(text, threadID, messageID)
  } catch (err) { api.sendMessage(`${err}`, threadID) }
}